{"type": "indicator", "spec_version": "2.1", "id": "indicator--ff118a7b-77ed-4a9e-a38b-4d95f1875290", "created_by_ref": "identity--748e6444-f073-4c50-b558-f49be8897a81", "created": "2022-11-01T13:15:00.000Z", "modified": "2022-11-17T03:15:00.000Z", "name": "CVE-2022-42324", "description": "Oxenstored 32->31 bit integer truncation issues Integers in Ocaml are 63 or 31 bits of signed precision. The Ocaml Xenbus library takes a C uint32_t out of the ring and casts it directly to an Ocaml integer. In 64-bit Ocaml builds this is fine, but in 32-bit builds, it truncates off the most significant bit, and then creates unsigned/signed confusion in the remainder. This in turn can feed a negative value into logic not expecting a negative value, resulting in unexpected exceptions being thrown. The unexpected exception is not handled suitably, creating a busy-loop trying (and failing) to take the bad packet out of the xenstore ring.", "indicator_types": ["compromised"], "pattern": "[(software:cpe='cpe:2.3:o:xen:xen:*:*:*:*:*:*:*:*')]", "pattern_type": "stix", "pattern_version": "2.1", "valid_from": "2022-11-01T13:15:00Z", "external_references": [{"source_name": "cve2stix", "description": "This object was created using cve2stix from the Signals Corps.", "url": "https://github.com/signalscorps/cve2stix"}], "object_marking_refs": ["marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"], "extensions": {"extension-definition--b463c449-d022-48b7-b464-3e9c7ec5cf16": {"extension_type": "property-extension", "all_cpe23uris": ["cpe:2.3:o:xen:xen:*:*:*:*:*:*:*:*"], "vulnerable_cpeid": ["cpe:2.3:o:xen:xen:*:*:*:*:*:*:*:*"]}}}